//====================================================================================
//Script Name: Vote For Points NPC Script for FluxCP
//SVN: Tested in rAthena r156513
//Developed By: JayPee Mateo
//Version: 1.0
//Requirement(s): FluxCP V4P Addon
//Description: This is a npc script for FluxCP Vote for points in order for the players
//to claim their vote points
//====================================================================================

prontera,146,174,6	script	Prof. Samuru	833,{

delwaitingroom;
waitingroom " Points | Rental | Gods | MVP ",0;
//Function Prototypes
function garbagecol;//Garbage collection for the Character variables
garbagecol();
function add_item; //Syntanx: add_item(ITEMID,QUANTITY,POINTS,CATEGORY);
function makeCategory;//This will return a list of the categories
function getItemsByCat;//This will return the list of items associated to the particular category
function getItemDetails;//This will return the details of the item
function getPoints;//This will return the points of the player stored in the database
function updatePoints;//This will updates the points of the player stored in the database


//NPC Name
set .npcname$,"[ Prof. Samuru ]";

//Initialization of the Rewards
add_item(5469,1,200,"Headgear");
add_item(5505,1,200,"Headgear");
add_item(5818,1,90,"Headgear");
add_item(5512,1,150,"Headgear");
add_item(5513,1,150,"Headgear");
add_item(5514,1,150,"Headgear");
add_item(5515,1,150,"Headgear");
add_item(5598,1,150,"Headgear");
add_item(5599,1,150,"Headgear");
add_item(5549,1,150,"Headgear");
add_item(5550,1,150,"Headgear");
add_item(5676,1,150,"Headgear");
add_item(5677,1,150,"Headgear");
add_item(5569,1,150,"Headgear");
add_item(5570,1,150,"Headgear");
add_item(5588,1,150,"Headgear");
add_item(5589,1,150,"Headgear");
add_item(5662,1,150,"Headgear");
add_item(5663,1,150,"Headgear");
add_item(5581,1,150,"Headgear");
add_item(5582,1,150,"Headgear");
add_item(5545,1,150,"Headgear");
add_item(5546,1,150,"Headgear");
add_item(5451,1,250,"RWC 2008");
add_item(5452,1,225,"RWC 2008");
add_item(5453,1,200,"RWC 2008");
add_item(7539,40,40,"Coin");
add_item(677,1,25,"Coin");
add_item(7227,1,50,"Card");



//Script Start
mes .npcname$;
mes "Hi! How may I help you today?:";
switch(select("Exchange my points:See my points:Claim a Coupon:Rent an Item:Buy Godly Items | MVP Cards"))
{
case 1:
	next;
	mes .npcname$;
	mes "Please choose a category:";
	set .@selected,select(makeCategory())-1;
	next;
	mes .npcname$;
	mes "Please the item you want:";
	set .@selected,select(getItemsByCat(@listCat$[.@selected]))-1;

	next;
	mes .npcname$;
	set .@ritemid,getItemDetails(@itemKeys[.@selected],"itemid");
	set .@rquantity,getItemDetails(@itemKeys[.@selected],"quantity");
	set .@rpoints,getItemDetails(@itemKeys[.@selected],"points");
	
	mes "Item ID:"+.@ritemid;
	mes "Item Name: "+getitemname(.@ritemid);
	mes "Item Quantity: "+.@rquantity+" pc(s).";
	mes "Required Points: "+.@rpoints+" pt(s).";
	mes "\n";
	mes "Do you want to this item?";
	if(select("Yes:No")==1)
	{
		set .@points,getPoints(getcharid(3));
		if(.@points>=.@rpoints)
		{
			next;
			mes .npcname$;
			updatePoints(getcharid(3),.@rpoints);
			getitem .@ritemid,.@rquantity;
			mes "Here you go!. Thank you for voting. Don't forget to vote again. :D";
		}
		else if(.@points < .@rpoints)
		{
			next;
			mes .npcname$;
			mes "Sorry, you do not have enough points for this item.";
		}
		else
		{
			next;
			mes .npcname$;
			mes "Okay bye!";
		}
	}
		garbagecol();
		close;
case 2:
	next;
	mes .npcname$;
	set .@points,getPoints(getcharid(3));
	mes "You currently have "+.@points+" pt(s).";
	garbagecol();
	close;
case 3:
	next;
	switch(Select("Submit Coupon:Exit"))
	{
		case 1:
			mes .npcname$;
			mes "Please enter your Coupon Code:";
			input @my_code$;
			next;
			query_sql "SELECT `code`, `item_id`, `item_amount` FROM `cp_coupons`", .@available_code$, .@available_item, .@available_amount;
			for (set @i, 0; @i < getarraysize(.@available_code$); set @i, @i+1)
			{
				if(@my_code$==.@available_code$[@i])
				{
					mes .npcname$;
					mes "You got ^0000FF" + getitemname(.@available_item[@i]) + " - " + .@available_amount[@i] + " ea.^000000";
					query_sql "DELETE FROM `cp_coupons` WHERE `code`='"+@my_code$+"'";
					getitem .@available_item[@i],.@available_amount[@i];
					//announce "Coupon : " + strcharinfo(0) + " got " + .@available_amount[@i] + getitemname(.@available_item[@i]) + "(s).",0;
					close;
				}
			}
			mes .npcname$;
			mes "This Coupon Code doesn't exist.";
			close;
		
		case 2:
			mes .npcname$;
			mes "Have a nice day.";
			close;
	}
	
case 4:
		next;
		mes .npcname$;
		mes "Hi hi hi hi!";
		next;
		mes .npcname$;
		mes "Well hello there!";
		next;
		menu "Rental Item List",-,"Exit",exit;
		next;
		switch(select("Foot Ring","Large Baphomet Horns","Odin's Mask","Spiked Scarf","Mjolnir","Ice Pick","Exit")){
		
		//Values: itemid,1stfee,2ndfee,3rdfee,4thfee,5thfee,1strenttimeduration,2ndrenttimeduration,3rdrenttimeduration,4threnttimeduration,5threnttimeduration
		
		case 1:
		callsub rent,20027,10,259200; end;
				
		case 2:
		callsub rent,20030,10,259200; end;
		
		case 3:
		callsub rent,20028,8,259200; end;
		
		case 4:
		callsub rent,20029,8,259200; end;
		
		case 5:
		callsub rent,20031,25,259200; end;
		
		case 6:
		callsub rent,20032,25,259200; end;
		
		case 7:
		close;
		}
		
	rent:
		mes .npcname$;
		mes "You can rent this item for 3 days at the price of  "+getarg(1)+" TCG cards.";
		mes "Do you want to rent this item?";
		next;
		switch(select("Yes:No")){
		
		//4 hours = 14400 secs	Rent fee: 1tcg
		//8 hours = 28800 secs	Rent fee: 5 tcg
		//12 hours = 43200 secs	Rent fee: 10 tcg
		//1 day = 86400secs		Rent fee: 15 tcg
		//3 days = 259200 secs	Rent fee: 50 tcg
		
		case 1:
		if(countitem(7227) >= getarg(1)){
			rentitem getarg(0),getarg(2);
			delitem 7227,getarg(1);
			close;
			}
			else {
				mes .npcname$;
				mes "Insufficient funds.";
				close;
			}
		case 2:
			close;
		}
		exit:
			close;
case 5:
	next;
	mes .npcname$;
	if (getgmlevel()>=80)
	{
	mes "Greetings GameMaster! Today it sold: ^FF0000" + $@buycnt + "^000000 God items.";
	}
	mes "Hello "+strcharinfo(0)+"! I sell God items and MVP cards. Please take a look and buy what you need.";
	switch(select("GOD items:MVP cards"))
	{
		case 1:
			callsub goditem_coven, 5013, 2629, 2410, 2541, 2383, 2630, 25, 25, 25 ,25, 20, 15,  .npcname$;
			close;
		case 2:
			callsub mvpcard_coven, 4305, 4399, 4174, 4047, 4121, 4128, 4302, 4135, 4143, 4168, 4198, 4146, 4131, 4263, 3, 3, 2, 2, 2, 2, 3, 1, 2, 1, 2, 1, 1, 2,  .npcname$;
			close;
	}
goditem_coven:
	setarray .@god_id[1], getarg(0), getarg(1), getarg(2), getarg(3), getarg(4), getarg(5);
	setarray .@god_price[1], getarg(6), getarg(7), getarg(8), getarg(9), getarg(10), getarg(11);
	set .npcname$, getarg(10);
	set .@num, select(			getitemname(.@god_id[1]),
											getitemname(.@god_id[2]),
											getitemname(.@god_id[3]),
											getitemname(.@god_id[4]),
											getitemname(.@god_id[5]),
											getitemname(.@god_id[6]));

	callsub buyitem_coven, .@god_id[.@num], .@god_price[.@num], .npcname$;
	close;
	
mvpcard_coven:
	setarray .@god_id[1], getarg(0), getarg(1), getarg(2), getarg(3), getarg(4), getarg(5), getarg(6), getarg(7), getarg(8), getarg(9), getarg(10), getarg(11), getarg(12), getarg(13);
	setarray .@god_price[1], getarg(14), getarg(15), getarg(16), getarg(17), getarg(18), getarg(19), getarg(20), getarg(21), getarg(22), getarg(23), getarg(24), getarg(25), getarg(26), getarg(27);
	set .npcname$, getarg(28);
	set .@num, select(			getitemname(.@god_id[1]),
											getitemname(.@god_id[2]),
											getitemname(.@god_id[3]),
											getitemname(.@god_id[4]),
											getitemname(.@god_id[5]),
											getitemname(.@god_id[6]),
											getitemname(.@god_id[7]),
											getitemname(.@god_id[8]),
											getitemname(.@god_id[9]),
											getitemname(.@god_id[10]),
											getitemname(.@god_id[11]),
											getitemname(.@god_id[12]),
											getitemname(.@god_id[13]),
											getitemname(.@god_id[14]));
	
	callsub buyitem_coven, .@god_id[.@num], .@god_price[.@num], .npcname$;
	close;
buyitem_coven:
	set .@god_id, getarg(0);
	set  .@god_price, getarg(1);
	set .@npc$, getarg(2);
	set .@amount, 1;
	set .@tradeitem, 7227;
	
	next;
	mes .npcname$;
	mes "This item cost:";
	mes "^0000FFTCG: ^000000" + .@god_price+ ".";
	
	menu "Buy the item.", -, "Nevermind.", M_CANCEL;
	
	if(.@god_price <= countitem(.@tradeitem))
	{
		delitem .@tradeitem,.@god_price; 
		getitem .@god_id, .@amount;
		set $@buycnt, $@buycnt+1;
		close;
	} else {
		mes "Sorry, you don't have enough money.";
		close;
	}
	
	
M_CANCEL:
	close;
}
end;

//Functions Bodies
function updatePoints {
	set .@account_id,getarg(0);
	set .@usedPoints,getarg(1);
	query_sql("UPDATE `login` SET points=(points-"+.@usedPoints+") WHERE account_id='"+.@account_id+"'");
//	query_sql("UPDATE `cp_v4p_voters` SET points=(points-"+.@usedPoints+") WHERE account_id='"+.@account_id+"'");
	return;
}

function getPoints {
	set .@account_id,getarg(0);
	query_sql("SELECT `points` FROM `login` WHERE account_id="+.@account_id+" LIMIT 1",.@points);

	if(getarraysize(.@points)==0)
		return 0;
	return .@points[0];
}

function getItemDetails {
set .@key,getarg(0); //Key
set .@detail$,getarg(1); //What details to return such as ItemID, Points, Quantity, Category

	if(.@detail$ == "itemid")
		return @itemID[.@key];
	else if((.@detail$ == "Quantity") || (.@detail$ == "quantity"))
		return @itemQ[.@key];
	else if((.@detail$ == "Points") || (.@detail$ == "points"))
		return @points[.@key];
	else if((.@detail$ == "Category") || (.@detail$ == "category"))
		return @category$[.@key];
}

function getItemsByCat {
	set .@selectedCat$,getarg(0);
	set .@make_string$,"";
	set .@x,0;
	for(set .@i,0; .@i<getarraysize(@category$); set .@i,.@i+1)
	{
		if(.@selectedCat$ == @category$[.@i])
		{
			setarray @itemKeys[.@x],.@i;
			if(.@make_string$ == "")
				set .@make_string$,getitemname(@itemID[.@i]);
			else
				set .@make_string$,.@make_string$+":"+getitemname(@itemID[.@i]);

			set .@x,.@x+1;
		}
	}
	return .@make_string$;
}


function makeCategory {
	set .@make_string$,"";
	for(set .@i,0; .@i<getarraysize(@category$); set .@i,.@i+1)
	{
		if(.@make_string$ == "")
		{
		setarray @listCat$[getarraysize(@listCat$)],@category$[.@i];
		set .@make_string$,@category$[.@i];
		}
		else
		{
			if(compare(.@make_string$,@category$[.@i])==0)
			{
				setarray @listCat$[getarraysize(@listCat$)],@category$[.@i];
				set .@make_string$,.@make_string$+":"+@category$[.@i];
			}
		}
	}
	return .@make_string$;
}

function add_item
{
	set .@itemID,getarg(0,-1); //IteID
	set .@itemQ,getarg(1,-1); //Item Quantity
	set .@points,getarg(2,-1);
	set .@cat$,getarg(3,"Uncategorized"); //Category


	if(.@itemID == -1)
	{
		debugmes "Invalid Item ID. Script not completely loaded.";
		end;
	}
	else if(.@itemQ == -1)
	{
		debugmes "Invalid Item Quantity. Script not completely loaded.";
		end;
	}
	else if(.@points == -1)
	{
		debugmes "Points assignment error. Script not completely loaded.";
		end;
	}
	
	set .@key,getarraysize(@itemID);
	setarray @itemID[.@key],.@itemID;
	setarray @itemQ[.@key],.@itemQ;
	setarray @points[.@key],.@points;
	setarray @category$[.@key],.@cat$;
	
	return 1; //return 1 as success
}

function garbagecol
{
	deletearray @itemID[0],128;
	deletearray @itemQ[0],128;
	deletearray @points[0],128;
	deletearray @category$[0],128;
	deletearray @listCat$[0],128;
	deletearray @itemKeys[0],128;
	return;
}
}