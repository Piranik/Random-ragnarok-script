/*
CREATE TABLE IF NOT EXISTS `ec_system` (
 `ec_id` bigint(15) NOT NULL AUTO INCREMENT,
 `acc_id` int(10) NOT NULL,
 `amount` bigint(15) DEFAULT '0',
  PRIMARY KEY (`ec_id`)
) ENGINE=MyISAM;

CREATE TABLE IF NOT EXISTS `ec_transfer` (
 `trans_id` bigint(20) NOT NULL AUTO INCREMENT,
 `send_id` bigint(15) NOT NULL,
 `rec_id` int(10) NOT NULL,
 `amount` bigint(15) DEFAULT '0',
 `time` time() NOT NULL,
 `date` date() NOT NULL,
 `usage` varchar(255) NOT NULL DEFAULT 'Unknown',
 `status` tinyint(5) DEFAULT '0'
) ENGINE=MyISAM; 
*/

prontera,150,180,5	script	EC Card Automat	110,{
function MONEY_FUNC;

mes .n$;
mes "Hello, "+strcharinfo(0)+".";
mes "What can I do for you?";
if(getgmlevel() >= .gm)
	if(select("- GM Menu:- Player Menu") == 1)
		goto GM_Menu;

next;
switch(select( ( (#EC_CT == 0)?"Create Bank Account":"Account Management") +":- Information:- Nothing") ) {
	
	case 1:
	mes .n$;
	if(#EC_ID == 0) {
		// Creating ID
		if(.id_r) {
			switch (.id_numb) {
				case 4: set .@id,rand(1000,9999); break;
				case 5: set .@id,rand(10000,99999); break;
				case 6: set .@id,rand(100000,999999); break;
				case 7: set .@id,rand(1000000,9999999); break;
				case 8: set .@id,rand(10000000,99999999); break;
				case 9: set .@id,rand(100000000,999999999); break;
			}
		} else 
			set .@id,set($id_ct,$id_ct + 1);
		
		mes "Your EC ID: "+.@id;
		set #EC_CT,1;
		set #EC_ID1,.@id;
		mes "Thank you for your time, your new account has been created.";
		
	} else {
		mes "Welcome to the Account Manangement Menu, please choose below what you want to do next:";
		next;
		switch(select("- Account Overview:- Withdraw:- Deposit:- Transfer:- Nevermind")) {
	
			case 1:
			if(#EC_ID == 0) {
				mes .n$;
				mes "You have to create an account first.";
				close;
			}
			MONEY_FUNC(1,0,0,#EC_CT);
			
			if(.ec_limit > 1 && #EC_CT != .ec_limit) {
				mes "It's possible to create up to "+.ec_limit+" Accounts, if you require it.";
				mes "Do you want to create another one?";
				if(select("- Yes:- No") - 1) close;
				next;
				mes .n$;
				// Creating ID
				if(.id_r) {
					switch (.id_numb) {
						case 4: set .@id,rand(1000,9999); break;
						case 5: set .@id,rand(10000,99999); break;
						case 6: set .@id,rand(100000,999999); break;
						case 7: set .@id,rand(1000000,9999999); break;
						case 8: set .@id,rand(10000000,99999999); break;
						case 9: set .@id,rand(100000000,999999999); break;
					}
				} else 
					set .@id,set($id_ct,$id_ct + 1);
				
				mes "Your "+(#EC_CT+1)+". EC ID is: "+.@id;
				set #EC_CT,#EC_CT + 1;
				setd("#EC_ID"+#EC_CT),.@id;
				mes "Thank you for your time, your new account has been created.";
			} else {
				mes " ";
				mes "According to our current services, I can't provide any future options for you.";
				mes "Farewell.";
				close;
			}
			break;
			
			// Withdraw
			case 2:
			MONEY_FUNC(1,0,0,#EC_CT);
			next;
			mes .n$;
			if(#EC_CT > 1) {
				mes "Choose the account first.";
				mes "You have "+#EC_CT+" Accounts.";
				if(input(.@acc_c,1,#EC_CT) != 0) {
					mes "Invalid Account, you have "+#EC_CT+" Accounts.";
					close;
				}
				mes "You have chosen Account #"+.@acc_c+", is that correct?";
				if(select("- Yes:- No") - 1) close;
				next;
				mes .n$;
			} else 
				set .@acc_c,1;

			query_sql "SELECT `amount` FROM ´ec_system´ WHERE `ec_id` = '"+getd("#EC_ID"+.@acc_c)+"'",.@ec_cash;
			mes "Please type how much you want to withdraw.";
			mes "Minimum 1, Maximum "+.w_limit;
			next;
			if(input(.@wd,1,.w_limit) != 0) {
				mes .n$;
				mes "Invalid Amount, minimum 1, maximum "+.w_limit;
				close;
			}
			mes .n$;
			if(.@wd > .@ec_cash) {
				mes "The chosen amount is higher than the amount on your account.";
				close;
			}
			mes "Amount: "+.@wd;
			mes "Is that correct?";
			next;
			if(select("- Yes:- No") - 1) close;
			mes .n$;
			if( (Zeny+.@wd) > .z_limit) {
				mes "The chosen amount would exceed the maximal amount you can hold.";
				close;
			}
			mes "Withdrawal successfull.";
			query_sql "UPDATE ´ec_system` SET `amount` = `amount` - '"+.@wd+"' WHERE `ec_id` = '"+getd("#EC_ID"+.@acc_c)+"'";
			set Zeny,Zeny + .@wd;
			break;
				
			// Deposit
			case 3:
			MONEY_FUNC(1,0,0,#EC_CT);
			next;
			mes .n$;
			if(#EC_CT > 1) {
				mes "Choose the account first.";
				mes "You have "+#EC_CT+" Accounts.";
				if(input(.@acc_c,1,#EC_CT) != 0) {
					mes "Invalid Account, you have "+#EC_CT+" Accounts.";
					close;
				}
				mes "You have chosen Account #"+.@acc_c+", is that correct?";
				if(select("- Yes:- No") - 1) close;
				next;
				mes .n$;
			} else 
				set .@acc_c,1;

			query_sql "SELECT `amount` FROM ´ec_system´ WHERE `ec_id` = '"+getd("#EC_ID"+.@acc_c)+"'",.@ec_cash;
			mes "Please type how much you want to deposit.";
			mes "Minimum 1, Maximum "+.d_limit;
			next;
			if(input(.@de,1,.d_limit) != 0) {
				mes .n$;
				mes "Invalid Amount, minimum 1, maximum "+.d_limit;
				close;
			}
			mes .n$;
			if(.@de > Zeny) {
				mes "The chosen amount is higher than the amount you currently hold.";
				close;
			}
			mes "Amount: "+.@de;
			mes "Is that correct?";
			next;
			if(select("- Yes:- No") - 1) close;
			mes .n$;
			if( (.@ec_cash + .@de) > .max_limit) {
				mes "The chosen amount would exceed the maximal amount your account can hold.";
				close;
			}
			mes "Deposit successfull.";
			query_sql "UPDATE ´ec_system` SET `amount` = `amount` + '"+.@de+"' WHERE `ec_id` = '"+getd("#EC_ID"+.@acc_c)+"'";
			set Zeny,Zeny - .@de;
			break;
			
			// Transfer
			case 4:
			mes .n$;
			mes "What now?";
			next;
			switch(select("- Make Transfer: - Check for Transfer:- Nevermind")) {
				
				case 1:
				mes "Please where the Zeny should be transfered from:";
				next;
				if(select("- Inventory:- Account")) == 2) {
					MONEY_FUNC(1,0,0,#EC_CT);
					next;
					mes .n$;
					if(#EC_CT > 1) {
						mes "Choose the account first.";
						mes "You have "+#EC_CT+" Accounts.";
						if(input(.@acc_c,1,#EC_CT) != 0) {
							mes "Invalid Account, you have "+#EC_CT+" Accounts.";
							close;
						}
						mes "You have chosen Account #"+.@acc_c+", is that correct?";
						if(select("- Yes:- No") - 1) close;
						next;
						mes .n$;
					} else 
						set .@acc_c,1;

					query_sql "SELECT `amount` FROM ´ec_system´ WHERE `ec_id` = '"+getd("#EC_ID"+.@acc_c)+"'",.@ec_cash;
					mes "Please type how much you want to transfer.";
					mes "Minimum 1, Maximum "+.t_limit;
					next;
					if(input(.@tr,1,.t_limit) != 0) {
						mes .n$;
						mes "Invalid Amount, minimum 1, maximum "+.t_limit;
						close;
					}
					mes .n$;
					if(.@tr > .@ec_cash) {
						mes "The chosen amount is higher than the amount on your account.";
						close;
					}
					set .@t_type,1;
				
				// From the Inventory
				} else {
					mes .n$;
					if(#EC_CT > 1) {
						mes "Please choose the Account as reference please:";
						mes "You have "+#EC_CT+" Accounts.";
						if(input(.@acc_c,1,#EC_CT) != 0) {
							mes "Invalid Account, you have "+#EC_CT+" Accounts.";
							close;
						}
					mes "You have chosen Account #"+.@acc_c+", is that correct?";
					if(select("- Yes:- No") - 1) close;
					next;
					mes .n$;
				} else 
					set .@acc_c,1;
					
					mes "Please type how much you want to transfer.";
					mes "Minimum 1, Maximum "+.t_limit;
					next;
					if(input(.@tr,1,.t_limit) != 0) {
						mes .n$;
						mes "Invalid Amount, minimum 1, maximum "+.t_limit;
						close;
					}
					mes .n$;
					if(.@tr > Zeny) {
						mes "The chosen amount is higher than the amount you currently hold.";
						close;
					}
					set .@t_type,2;
				}
				mes "Amount: "+.@tr;
				mes "Is that correct?";
				next;
				if(select("- Yes:- No") - 1) close;
				mes .n$;
				mes "Please type the EC ID of the reciever.";
				mes "Length: Minimum 1, Maximum "+.id_numb;
				next;
				if(input(.@ec_r,1,.id_numb) != 0) {
					mes .n$;
					mes "Invalid length of ID, Minimum 1, Maximum "+.id_numb;
					close;
				}
				mes .n$;
				if(query_sql("SELECT `acc_id` FROM `ec_system` WHERE `ec_id` = "+.@ec_r,.@a_id) == 0) {
					mes "It seems like this EC Card ID doesn't exist.";
					mes "Please type the correct one.";
					close;
				}
				mes "Now please tell me usage of the transaction.";
				mes "Note: Type '0' for none.";
				input .@use$;
				if(.@use$ == "0") 
					set .@use$,"Unknown";
				
				mes "Transfer successfull.";
				if(.@t_type == 1) 
					query_sql "UPDATE `ec_system` SET `amount` = `amount` - '"+.@tr+"' WHERE `ec_id` = '"+getd("#EC_ID"+.@acc_c)+"'";
					
				else set Zeny,Zeny - .@tr;
				
				set .@t_id,set($tr_id,$tr_id + 1);
				query_sql "INSERT INTO `ec_transfer` ( `trans_id` , `send_id` , `rec_id` , `amount` , `time` , `date` , `usage` , `status` ) VALUES ( '"+.@t_id+"' , '"+getd("#EC_ID"+.@acc_c)+"' , '"+.@ec_r+"' , '"+.@tr+"' , 'CURTIME()' , 'CURDATE()' , '"+.@use$+"' , '0')";
				break;
				
				// Check Transfer List
				case 2:
				mes .n$;
				mes "Do you want to check for new transfers or take a look at the transfer list?";
				next;
				if(select("- Check for new Transfers:- Transfer List") == 1) {
					for ( set .@c,1; .@c <= #EC_CT; set .@c,.@c + 1) {
						query_sql "SELECT `trans_id` , `send_id` , `amount` , `time` , `date` , `usage` FROM `ec_transfer` WHERE `rec_id` = '"+getd("#EC_ID"+.@c)+"' AND `status` = '0'",.@t_id,.@send_id,.@am,.@te$,.@dt$,.@use$;
						if(.@t_id[0] == 0) {
							mes .n$;
							mes "For the ID "+getd("#EC_ID"+.@c)+" was no transaction made.";
							next;
							continue;
						}
						mes "Transfer List - EC ID:"+getd("#EC_ID+".@c)+":";
						for ( set .@l,0; .@l < getarraysize(.@t_id); set .@l,.@l + 1) {
							mes "Transaction ID: "+.@t_id[.@l];
							mes "Sender ID: "+.@send_id[.@l];
							mes "Amount: "+.@am[.@l];
							mes "Time: "+.@te$[.@l];
							mes "Date: "+.@dt$[.@l];
							mes "Usage: "+.@use$[.@l];
							if(.@t_id[.@l+1] == 0) mes "===================";
							else mes "-------------------";
							setd(".@am_"+.@c),getd(".@am_"+.@c) + .@am[.@l];
							
						}
						setd(".@t_"+.@c),getarraysize(.@t_id);
					}
					// Accepting remaing Transactions
					next;
					mes .n$;
					for ( set .@c,1; .@c <= #EC_CT; set .@c,.@c + 1) {
						if(getd(".@t_"+.@c) == 0) continue;
						mes "ID: "+getd("#EC_ID"+.@c)+":";
						mes "Amount of Transactions: "+getd(".@t_"+.@c);
						mes "Amount of Total Zeny: "+getd(".@am_"+.@c);
						mes " ";
						mes "Where do you want to transfer the money to?";
						mes "Note: In case the destinied EC ID is full or does not have enough room left, you can transfer it to another EC ID";
						next;
						switch(select("- To EC ID:- To Inventory:- "+( (.@c != #EC_CT)?"Next EC ID":"Nothing") )) {
							
							case 1:
							mes .n$;
							
							case 2:
							mes .n$;
							mes "Current Zeny: "+Zeny;
							mes "Zeny Limit: "+.z_limit;
							if(Zeny > .z_limit) {
								mes "It seems like you already have exceeded the maximal zeny limit you can hold while using this service.";
								close;
							}
							set .@calc,(.z_limit - Zeny);
							mes "Remaing Space: "+.@calc;
							next;
							mes .n$;
							if(.@calc < getd(".@am_"+.@c)) {
								mes "It seems like you can't hold more Zeny as you actually do.";
								close;
							}
							
							case 3:
							mes .n$;
							if(.@c == #EC_CT) {
								mes "If you should change your mind, tell me.";
								close;
							}
						}
					}				
					break;
					
				} else {
					for ( set .@c,1; .@c <= #EC_CT; set .@c,.@c + 1) {
						query_sql "SELECT `trans_id` , `send_id` , `amount` , `time` , `date` , `usage` FROM `ec_transfer` WHERE `rec_id` = '"+getd("#EC_ID"+.@c)+"'",.@t_id,.@send_id,.@am,.@te$,.@dt$,.@use$;
						if(.@t_id[0] == 0) {
							mes .n$;
							mes "For the ID "+getd("#EC_ID"+.@c)+" was no transaction made.";
							next;
							continue;
						}
						mes "Transfer List - EC ID:"+getd("#EC_ID+".@c)+":";
						for ( set .@l,0; .@l < getarraysize(.@t_id); set .@l,.@l + 1) {
							mes "Transaction ID: "+.@t_id[.@l];
							mes "Sender ID: "+.@send_id[.@l];
							mes "Amount: "+.@am[.@l];
							mes "Time: "+.@te$[.@l];
							mes "Date: "+.@dt$[.@l];
							mes "Usage: "+.@use$[.@l];
							if(.@t_id[.@l+1] == 0) mes "===================";
							else mes "-------------------";
							setd(".@am_"+.@c),getd(".@am_"+.@c) + .@am[.@l];
							
						}
						setd(".@t_"+.@c),getarraysize(.@t_id);
					}
					for ( set .@c,1; .@c <= #EC_CT; set .@c,.@c + 1) {
						if(getd(".@t_"+.@c) == 0) continue;
						mes "----------------------";
						mes "ID: "+getd("#EC_ID"+.@c)+":";
						mes "Amount of Transactions: "+getd(".@t_"+.@c);
						mes "Amount of Total Zeny: "+getd(".@am_"+.@c);
					}
				}
				close;
					
				case 3:
				break;
		}
		break;
	}
	break;
	
	case 2:
	mes .n$;
	mes "[Info]";
	break;
	
	case 3:
	break;
}
close;


GM_Menu:
// Transaction Logging, EC Card List (Account ID,EC ID and Amount), ...

close;

OnPCLoginEvent:
if(!#EC_ID1) end;
for ( set .@c,1; .@c <= #EC_CT; set .@c,.@c + 1) {
	set .@t_ct,0;
	query_sql "SELECT COUNT(`trans_id`) WHERE `rec_id` = '"+getd("#EC_ID"+.@c)+"' AND `status` = '0'",.@t_ct;
	if(.@t_ct == 0) continue;
	set .@t_tot,.@t_tot + .@t_ct;
}
dispbottom .n$+": You have recieved "+.@t_tot+" transactions, which are yet to be accepted";
dispbottom .n$+": Please visit me to accept them.";
end;

OnInit:
set .n$,"[EC Automat]";
set .gm,80; // GM Access
// Random Card ID on creation?
// 0 = First ID starts with 1
// 1 = random Numbers
set .id_r,0;

set .id_numb,4; // Numbers Quantity
set .w_limit,10000000; // Withdraw Limit
set .d_limit,10000000; // Deposit Limit
set .t_limit,1000000; // Transfer Limit
set .z_limit,1000000000; // Maximum Zeny you can hold
set .max_limit,1000000000; // Max Zeny Limit on the Bank Account

// EC ID per player - Yes, a player can hold more than 1 account
set .ec_limit,1;
end;


// *********** Save/Read Money Function *********** //
function	MONEY_FUNC	{
// getarg(0):
// 1 = Read
// 2 = Write

// ***** getarg(0) == 2 *******
// getarg(1) = Zeny Value
// getarg(2):
// 1 = Addition
// 2 = Subtraction
// **************************
// getarg(3) = Account Counter, in case .ec_limit is above 1 > extra variable :I

mes .n$;
if(query_sql "SELECT `acc_id` FROM `ec_system` WHERE `ec_id` = '"+#EC_ID+"'",.@acc) != 0) {
	if(getarg(0) == 1) { // Reading Account Balance
		mes "This is your current balance:";
		set .@c,1;
			while ( (set(.@c,.@c + 1) < getarg(3) ) ) 
				mes "ID #"+.@c+": "+getd("#EC_ID"+.@c)+" - "+query_sql "SELECT `amount` FROM ´ec_system´ WHERE `ec_id` = '"+getd("#EC_ID"+.@c)+"'",.@ec_cash;
		if(getarg(3) == 1  && .ec_limit == 1) 
			mes "ID: "+#EC_ID1+" - "+query_sql "SELECT `amount` FROM ´ec_system´ WHERE `ec_id` = '"+#EC_ID+"'",.@ec_cash;

		else {
			set .@c,1;
			while ( (set(.@c,.@c + 1) < getarg(3) ) ) 
				mes .@c+". - "+getd("#EC_ID"+.@c)+" - "+query_sql "SELECT `amount` FROM ´ec_system´ WHERE `ec_id` = '"+getd("#EC_ID"+.@c)+"'",.@ec_cash;
		}
	
	// Writing new Account Balance
	} else if(getarg(0) == 2) {
		
		// Addition
		if(getarg(2) == 1) {
			
			if(getarg(3) == 1 && .ec_limit == 1) 
				query_sql "UPDATE ´ec_system` SET `amount` = `amount` + '"+getarg(1)+"' WHERE `ec_id` = '"+#EC_ID1+"'";
			
			else {
				set .@c,1;
				while ( (set(.@c,.@c + 1) < getarg(3) ) ) {
					if(query_sql("SELECT `amount` FROM ´ec_system´ WHERE `ec_id` = '"+getd("#EC_ID"+.@c)+"'",.@ec_cash) >= .max_limit) continue;
						query_sql "UPDATE ´ec_system` SET `amount` = `amount` + '"+getarg(1)+"' WHERE `ec_id` = '"+getd("#EC_ID"+.@c)+"'";
				}
			}
			mes getarg(1)+" Zeny have been added on your account. Thanks for using this service.";
		// Subtraction
		} else {
			if(getarg(3) == 1 && .ec_limit == 1) 
				query_sql "UPDATE ´ec_system` SET `amount` = `amount` - '"+getarg(1)+"' WHERE `ec_id` = '"+#EC_ID1+"'";
			
			else {
				set .@c,1;
				while ( (set(.@c,.@c + 1) < getarg(3) ) ) {
					if(query_sql("SELECT `amount` FROM ´ec_system´ WHERE `ec_id` = '"+getd("#EC_ID"+.@c)+"'",.@ec_cash) >= .max_limit) continue;
						query_sql "UPDATE ´ec_system` SET `amount` = `amount` - '"+getarg(1)+"' WHERE `ec_id` = '"+getd("#EC_ID"+.@c)+"'";
				}
			}
			mes getarg(1)+" Zeny have been removed from your account. Thanks for using this service.";
		}
	}
} else 
	mes "It seems like you didn't open an account yet.";

return;	
}
/*
// Item DB Entry:
25000,EC_Card,EC Card,3,50,,70,,,,,0xFFFFFFFF,7,2,,,,,,{ },{},{}

// idnum2resnametable & num2resnametable.txt
25000#ÄíÆù-³ë¸Ö#

// idnum2desctable & num2desctable.txt
25000#
An EC Card which are given to the customers of the Bank,
to proof their membership.
On it is the EC ID and Name of the Owner saved.
#

// idnum2displaynametable & num2displaynametable.txt
25000#EC Card#
*/